mp.messaging.incoming.wait.connector=smallrye-kafka
mp.messaging.incoming.wait.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.wait.group.id=kogito-sw-callback
mp.messaging.incoming.wait.auto.offset.reset=earliest

mp.messaging.outgoing.out-wait.connector=smallrye-kafka
mp.messaging.outgoing.out-wait.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.out-wait.topic=wait
mp.messaging.outgoing.out-wait.group.id=kogito-sw-callback
mp.messaging.outgoing.out-wait.auto.offset.reset=earliest

mp.messaging.incoming.in-produce.connector=smallrye-kafka
mp.messaging.incoming.in-produce.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.in-produce.topic=produce
mp.messaging.incoming.in-produce.group.id=kogito-sw-callback
mp.messaging.incoming.in-produce.auto.offset.reset=earliest

mp.messaging.outgoing.produce.connector=smallrye-kafka
mp.messaging.outgoing.produce.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.produce.group.id=kogito-sw-callback
mp.messaging.outgoing.produce.auto.offset.reset=earliest

## metadata
mp.messaging.outgoing.kogito-processinstances-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-processinstances-events.topic=kogito-processinstances-events
mp.messaging.outgoing.kogito-processinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.outgoing.kogito-usertaskinstances-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-usertaskinstances-events.topic=kogito-usertaskinstances-events
mp.messaging.outgoing.kogito-usertaskinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.outgoing.kogito-variables-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-variables-events.topic=kogito-variables-events
mp.messaging.outgoing.kogito-variables-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer


mp.messaging.outgoing.kogito-processdefinitions-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-processdefinitions-events.topic=kogito-processdefinitions-events
mp.messaging.outgoing.kogito-processdefinitions-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer


kogito.persistence.type=jdbc
quarkus.datasource.db-kind=postgresql
kogito.persistence.proto.marshaller=false

#run create tables scripts
kie.flyway.enabled=true

quarkus.native.native-image-xmx=8g
quarkus.native.additional-build-args=--initialize-at-run-time=org.postgresql.sspi.SSPIClient

# This property is used to select the log level, which controls the amount
# of information logged on HTTP requests based on the severity of the events.
# Possible values: OFF, FATAL, ERROR, WARN, INFO, DEBUG, ALL.
# and see https://quarkus.io/guides/logging for documentation
quarkus.log.category."org.apache.http".level=INFO
quarkus.log.level=INFO
